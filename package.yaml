name: type-level-kv-list
version: "2.0.2.0"
category: "Data"
synopsis: "Type level Key-Value list."
description:
  This library provides a brief implementation for extensible records.
license: "MIT"
author: "Sakura-chan the Goat"
copyright: "2016 Sakura-chan the Goat"
maintainer: "arow.okamoto+github@gmail.com"

extra-source-files:
  - README.md

ghc-options: -Wall -Wcompat -Wincomplete-record-updates -Wincomplete-uni-patterns -Wredundant-constraints
default-extensions:
  - BangPatterns
  - BinaryLiterals
  - ConstraintKinds
  - DataKinds
  - DefaultSignatures
  - DeriveDataTypeable
  - DeriveFoldable
  - DeriveFunctor
  - DeriveGeneric
  - DeriveTraversable
  - DoAndIfThenElse
  - DuplicateRecordFields
  - EmptyDataDecls
  - ExistentialQuantification
  - FlexibleContexts
  - FlexibleInstances
  - FunctionalDependencies
  - GADTs
  - GeneralizedNewtypeDeriving
  - InstanceSigs
  - KindSignatures
  - LambdaCase
  - MultiParamTypeClasses
  - MultiWayIf
  - NamedFieldPuns
  - OverloadedStrings
  - PartialTypeSignatures
  - PatternGuards
  - PolyKinds
  - RankNTypes
  - RecordWildCards
  - ScopedTypeVariables
  - StandaloneDeriving
  - Strict
  - StrictData
  - TupleSections
  - TypeFamilies
  - TypeSynonymInstances
  - ViewPatterns

dependencies:
  - base >= 4.7 && < 5

library:
  source-dirs:
    - src
  exposed-modules:
    - Data.KVList

tests:
  doctest:
    main: "DocTest.hs"
    other-modules: []
    source-dirs:
      - test
    dependencies:
      - type-level-kv-list
      - doctest
      - Glob

github: arowM/type-level-kv-list
